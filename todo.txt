add more checks to arg parsing

start thinking about how to combine alignments from the Pareto front
to create local ones. Should try to take from the best representatives of
the whole front-- might want to look at distance in alignment space as well
as objective space to do so.

add logging of mean and max over time for plotting purposes

test smallstart, uniformsize, and ec

make non-tournament selection faster

label objectives better when displaying verbose stats

make sure asserts are turned off in optimized version

consider making this memetic -- local search on new alns

consider adding archive

consider self-adaptive mutation probabilities

REFACTORING
-----------
use doSwap function in crossover constructor

rewrite the abomination that updateConservedCount has become
function of: whether self loop, whether neighbor and self used to have
       conserved edge, whether neighbor and self now have conserved
       edge, and both masks. 

move NSGA-II functions out into separate files

LOCAL SEARCH
------------
hillClimb function just calls mutate repeatedly, always switching to new aln
that improves the given objective. Seems to work really well. Need to make it
faster. Create hypotheticalDoSwap that returns a vector of how much conservedCounts
would increase/decrease and how much bitscores would change. Could we then exhaustively consider all possible swaps at each iteration? Would that be worthwhile?